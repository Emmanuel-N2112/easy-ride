// Generated by CoffeeScript 1.4.0
var drivesController,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

drivesController = drivesController || {};

jQuery(function() {
  var Drive, DrivesController;
  DrivesController = (function() {

    function DrivesController() {
      this.loadDrives = __bind(this.loadDrives, this);

      this.load = __bind(this.load, this);

      this.ajax = __bind(this.ajax, this);
      this.status = $('#trips-driving-status');
      this.statusMsg = $('#trips-driving-msg');
      this.statusLoader = $('#trips-driving-loader');
      this.drives = $('#trips-driving');
      setTimeout(this.ajax, 1000);
    }

    DrivesController.prototype.ajax = function() {
      var _this = this;
      return $.ajax({
        url: '/trips_ajax.php',
        type: 'GET',
        data: {
          'method': 'get_upcoming_drives',
          'data': JSON.stringify({})
        },
        success: this.load,
        complete: function(xhr, status) {
          if (status !== 'success') {
            _this.statusMsg.html("<em>" + xhr.status + ": " + xhr.statusText + "</em>");
            return _this.statusLoader.fadeOut(500, function() {
              return _this.statusMsg.fadeIn(500);
            });
          }
        }
      });
    };

    DrivesController.prototype.load = function(json) {
      var data, drives,
        _this = this;
      data = JSON.parse(json);
      console.log(data);
      drives = data.drives;
      if (drives.length === 0) {
        return this.statusLoader.fadeOut(500, function() {
          return _this.statusMsg.fadeIn(500);
        });
      } else {
        return this.drives.fadeOut(500, function() {
          _this.status.hide();
          return _this.loadDrives(drives);
        });
      }
    };

    DrivesController.prototype.loadDrives = function(drivesData) {
      var drive, driveData, _i, _len;
      for (_i = 0, _len = drivesData.length; _i < _len; _i++) {
        driveData = drivesData[_i];
        console.log(drive);
        drive = new Drive(driveData);
        this.drives.append(drive.render());
      }
      this.drives.fadeIn(500);
      return $('.dropdown-toggle').dropdown();
    };

    return DrivesController;

  })();
  Drive = (function() {

    function Drive(data) {
      this.data = data;
      this.data.departure_string = (new Date(parseInt(this.data.departure_time) * 1000)).toLocaleString();
      this.template = _.template($('#trip-row-template').html());
    }

    Drive.prototype.render = function() {
      return this.template(this.data);
    };

    return Drive;

  })();
  return drivesController = new DrivesController();
});
