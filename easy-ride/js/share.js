// Generated by CoffeeScript 1.4.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

jQuery(function() {
  var RideSharer;
  RideSharer = (function() {

    function RideSharer() {
      this.updateRoute = __bind(this.updateRoute, this);

      this.calculateRoute = __bind(this.calculateRoute, this);
      this.from = $('#share-from');
      this.to = $('#share-to');
      this.date = $('#share-departure-date').datepicker();
      this.departureTime = $('#share-departure-time').timepicker();
      this.arrivalTime = $('#share-arrival-time').timepicker();
      this.directionsDisplay = new google.maps.DirectionsRenderer();
      this.directionsService = new google.maps.DirectionsService();
      this.mapOptions = {
        center: new google.maps.LatLng(51.517099, -0.146084),
        zoom: 12,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };
      this.map = new google.maps.Map($('#map_canvas')[0], this.mapOptions);
      this.mapMarkers = [];
      this.directionsDisplay.setMap(this.map);
      $('#share-from, #share-to').change(this.calculateRoute);
    }

    /*
                Uses Google Maps Directions API to calculate the route for the data
                entered by the user.
    */


    RideSharer.prototype.calculateRoute = function() {
      var from, request, to,
        _this = this;
      from = this.from.val().trim();
      to = this.to.val().trim();
      if (!from || !to) {
        return;
      }
      request = {
        origin: from,
        destination: to,
        travelMode: google.maps.TravelMode.DRIVING,
        region: 'uk'
      };
      return this.directionsService.route(request, function(result, status) {
        if (status === google.maps.DirectionsStatus.OK) {
          _this.directionsDisplay.setDirections(result);
          return _this.updateRoute(result);
        } else {
          return console.log('No routes found');
        }
      });
    };

    /*
                Updates the form on the page to reflect the results of a route.
    */


    RideSharer.prototype.updateRoute = function(result) {
      var route;
      route = result['routes'][0];
      console.log(route);
      this.from.val(route['legs'][0]['start_address']);
      return this.to.val(route['legs'][0]['end_address']);
    };

    RideSharer.prototype.updateFrom = function() {
      var query;
      query = this.from.val().trim();
      if (!query) {

      }
    };

    return RideSharer;

  })();
  return new RideSharer();
});
