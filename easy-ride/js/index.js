// Generated by CoffeeScript 1.4.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

require(['components/map-route', 'components/input/date-picker'], function(MapRoute, DatePicker) {
  var RideSearcher;
  RideSearcher = (function() {

    function RideSearcher() {
      this.toJson = __bind(this.toJson, this);

      this.setButton = __bind(this.setButton, this);

      var _this = this;
      this.womenOnly = $('#search-women-only');
      this.departure = new DatePicker($('#search-departure'), $('#search-departure-date'), true);
      this.route = new MapRoute($('#search-route'), $('#search-from'), $('#search-to'));
      this.searchButton = $('#search-button');
      this.searchButton.click(function() {
        var data;
        data = _this.toJson();
        if (data === null) {
          return null;
        }
        console.log(data);
        return $.ajax({
          url: '',
          type: 'GET',
          data: {
            'data': JSON.stringify(data)
          },
          success: function(data) {
            return _this.setButton('btn btn-success', 'Search');
          },
          error: function(data) {
            return this.setButton('btn btn-danger', 'Error!');
          }
        });
      });
    }

    RideSearcher.prototype.setButton = function(btnClass, msg) {
      this.searchButton.attr('class', btnClass);
      return this.searchButton.text(msg);
    };

    RideSearcher.prototype.toJson = function() {
      var json, key, value;
      json = {
        departure: this.departure.getTime(),
        women_only: this.womenOnly.prop('checked'),
        route: this.route.toJson()
      };
      for (key in json) {
        value = json[key];
        if (value === null) {
          return null;
        }
      }
      return json;
    };

    return RideSearcher;

  })();
  return new RideSearcher();
});
